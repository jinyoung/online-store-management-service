Please implement for this Event Storming Model:

{"_type":"BoundedContext","aggregates":[{"aggregateRoot":{"_type":"AggregateRoot","fieldDescriptors":[{"className":"UUID","name":"orderId","displayName":"주문 아이디","_type":"FieldDescriptor"},{"className":"UUID","name":"productId","displayName":"상품 아이디","_type":"FieldDescriptor"},{"className":"Integer","name":"quantity","displayName":"수량","_type":"FieldDescriptor"},{"className":"String","name":"status","displayName":"상태","_type":"FieldDescriptor"},{"className":"statusType","name":"statusType","displayName":"상태 유형","_type":"FieldDescriptor"}]},"commands":[{"_type":"Command","fieldDescriptors":[{"className":"UUID","name":"productId","_type":"FieldDescriptor"},{"className":"Integer","name":"quantity","_type":"FieldDescriptor"}],"name":"PlaceOrder","displayName":"주문하기"},{"_type":"Command","fieldDescriptors":[{"className":"UUID","name":"orderId","_type":"FieldDescriptor"}],"name":"ProcessOrder","displayName":"주문 처리하기"},{"_type":"Command","fieldDescriptors":[{"className":"UUID","name":"orderId","_type":"FieldDescriptor"},{"className":"String","name":"status","_type":"FieldDescriptor"}],"name":"UpdateDeliveryStatus","displayName":"배송 상태 업데이트하기"}],"events":[{"fieldDescriptors":[{"className":"UUID","name":"orderId","_type":"FieldDescriptor"},{"className":"UUID","name":"productId","_type":"FieldDescriptor"},{"className":"Integer","name":"quantity","_type":"FieldDescriptor"}],"name":"OrderPlaced","displayName":"주문 생성됨","_type":"Event"},{"fieldDescriptors":[{"className":"UUID","name":"orderId","_type":"FieldDescriptor"},{"className":"String","name":"status","_type":"FieldDescriptor"}],"name":"OrderProcessed","displayName":"주문 처리됨","_type":"Event"},{"fieldDescriptors":[{"className":"UUID","name":"orderId","_type":"FieldDescriptor"},{"className":"String","name":"status","_type":"FieldDescriptor"}],"name":"DeliveryStatusUpdated","displayName":"배송 상태 업데이트됨","_type":"Event"}],"name":"Order","displayName":"주문","_type":"Aggregate"},{"aggregateRoot":{"_type":"AggregateRoot","fieldDescriptors":[{"className":"UUID","name":"productId","displayName":"상품 아이디","_type":"FieldDescriptor"},{"className":"Integer","name":"quantity","displayName":"수량","_type":"FieldDescriptor"}]},"commands":[{"_type":"Command","fieldDescriptors":[{"className":"UUID","name":"productId","_type":"FieldDescriptor"},{"className":"Integer","name":"quantity","_type":"FieldDescriptor"}],"name":"ManageInventory","displayName":"재고 관리하기"}],"events":[{"fieldDescriptors":[{"className":"UUID","name":"productId","_type":"FieldDescriptor"},{"className":"Integer","name":"quantity","_type":"FieldDescriptor"}],"name":"InventoryManaged","displayName":"재고 관리됨","_type":"Event"}],"name":"Inventory","displayName":"재고","_type":"Aggregate"}],"name":"order-inventory","displayName":"주문 관리 및 재고","policies":[]}




I want to utilize following techniques:

- clean architecture
- spring-boot3
- spring-data-rest
- JPA (must use package jakarta.persistence.* instead of javax.persistence.*)
- H2 DB
- Lombok
- Kafka with spring-cloud-streams library
- JUnit Test


